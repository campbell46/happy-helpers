import { useState, useEffect } from 'react';
import { getTasks } from './api/tasks/index'
import Head from 'next/head';
import TaskList from '@/components/TaskList';
import { Inter } from 'next/font/google';
import Footer from '@/components/Footer';
import NavBar from '@/components/NavBar';
import { PrismaClient } from '@prisma/client';
import Sidebar from '@/components/Sidebar';
import PageHeader from '@/components/PageHeader';
import axios from 'axios'

const inter = Inter({ subsets: ['latin'] });

const sidebarOptions = ['All Tasks', 'Errands', 'Housework']

export default function Home({tasks}) {
  const [fetchTasks, setFetchTasks] = useState(tasks.tasks);
  const [sidebar, setSidebar] = useState(sidebarOptions)
  const [selectedSidebar, setSelectedSidebar] = useState(sidebar[0])
  // const [category, setCategory] = useState(0);
console.log(tasks)
  useEffect(() => {
    const fetchData = async () => {
    const data = await axios.post('http://localhost:3000/api/tasks', fetchTasks)
      return data
  }
  const theFetcher = fetchData()
  console.log(theFetcher)
  }, [])
console.log(fetchTasks)
  // useEffect (() => {
  //   setFetchTasks((prev) => {
  //     prev.filter(item => ) 
  //   })

  // }, [selectedSidebar])

  return (
    <>
      <Head>
        <title>Happy Helpers</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-white">
        <NavBar />
        <div className="flex">
          <Sidebar sidebarOptions={sidebar} setSelectedSidebar={setSelectedSidebar} />
          <section className='flex flex-col'>
            <PageHeader />
            <TaskList tasks={fetchTasks} />
          </section>

        </div>
      </main>

      <Footer />
    </>
  )
}

export async function getServerSideProps() {
  const tasks = await axios.get('http://localhost:3000/api/tasks')
  // console.log(tasks.data)
  return {
    props: { tasks: tasks.data }
  }
}